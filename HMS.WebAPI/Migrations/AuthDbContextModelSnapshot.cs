// <auto-generated />
using System;
using HMS.Auth.Infrastructures;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMS.WebAPI.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    partial class AuthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HMS.Auth.Domain.AuthCustomer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CitizenIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("AuthCustomer", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthCustomerVoucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("UsedAt")
                        .HasColumnType("date");

                    b.HasKey("VoucherId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AuthCustomerVoucher", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthFavouriteRoom", b =>
                {
                    b.Property<int>("FavouriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavouriteId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("FavouriteId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AuthFavouriteRoom", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthReceptionist", b =>
                {
                    b.Property<int>("ReceptionistId")
                        .HasColumnType("int");

                    b.Property<string>("CitizenIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceptionistId");

                    b.ToTable("AuthReceptionist", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("AuthRole", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PermissonKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissonKey");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthRolePermission", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthUser", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthVoucher", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoucherId"));

                    b.Property<DateOnly>("ExpDate")
                        .HasColumnType("date");

                    b.Property<float>("Percent")
                        .HasColumnType("real");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("VoucherId");

                    b.ToTable("AuthVoucher", "auth");
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthCustomer", b =>
                {
                    b.HasOne("HMS.Auth.Domain.AuthUser", null)
                        .WithOne()
                        .HasForeignKey("HMS.Auth.Domain.AuthCustomer", "CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthCustomerVoucher", b =>
                {
                    b.HasOne("HMS.Auth.Domain.AuthCustomer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HMS.Auth.Domain.AuthVoucher", null)
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthFavouriteRoom", b =>
                {
                    b.HasOne("HMS.Auth.Domain.AuthCustomer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthReceptionist", b =>
                {
                    b.HasOne("HMS.Auth.Domain.AuthUser", null)
                        .WithOne()
                        .HasForeignKey("HMS.Auth.Domain.AuthReceptionist", "ReceptionistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthRolePermission", b =>
                {
                    b.HasOne("HMS.Auth.Domain.AuthPermission", null)
                        .WithMany()
                        .HasForeignKey("PermissonKey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HMS.Auth.Domain.AuthRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HMS.Auth.Domain.AuthUser", b =>
                {
                    b.HasOne("HMS.Auth.Domain.AuthRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
